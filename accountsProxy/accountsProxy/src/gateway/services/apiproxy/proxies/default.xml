<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description/>
    #proxyDefaultFaultRule#
    <FaultRules>
        #genericUnhandledExceptionFaultRule#
        #commonAccessTokenFaultRules#
        #commonTraficManagementFaultRules#
    </FaultRules>
    <PreFlow name="PreFlow">
        <Request>
         <Step>
            <Name>KVM-GetTargetConfigurations</Name>
        </Step>
        #commonProxyPreflowRequest#
        <Step>
            <Name>EV-GetServiceCommonVariable</Name>
        </Step>
        </Request>
        <Response/>
    </PreFlow>
    <Flows>
        #pingResourceFlow#
        <Flow name="GetApplicableAddOnServices">
            <Request>
                <Step>
                    <Name>AM-RequiredRateplanMissing</Name>
                    <Condition>(request.queryparam.rateplan = null)</Condition>
                </Step>
                <Step>
                    <Name>AM-RequiredChannelParamMissing</Name>
                    <Condition>(request.queryparam.channel = null)</Condition>
                </Step>
                <Step>
                    <Name>JSC-BuildJsonPayloadAddOnServices</Name>
                </Step>
                #commonJsonToXmlPolicy#
                <Step>
                    <Name>AM-GetApplicableAddOnServices-Payload</Name>
                </Step>
            </Request>
            <Response></Response>
            <Condition>(request.verb = "GET") and (proxy.pathsuffix JavaRegex "(/?)$") and (request.queryparam.type="applicableaddon")</Condition>
        </Flow>
        <Flow name="GetPrepaidBlackberryServices">
            <Request>
                <Step>
                    <Name>JSC-CheckMsisdn</Name>
                </Step>
                <Step>
                    <Name>JSC-ValidateMsisdn</Name>
                    <Condition>(du.config.isGetPrepaidBlackberryServicesFlag = "true")</Condition>
                </Step>
                <Step>
                    <Name>AM-GetPrepaidBlackberryServices-Payload</Name>
                </Step>
            </Request>
            <Response></Response>
            <Condition>(request.verb = "GET") and (proxy.pathsuffix JavaRegex "(/?)$") and (request.queryparam.type="prepaidblackberry")</Condition>
        </Flow>
        <Flow name="VerifyDuNumber">
            <Request>
                 <Step>
                    <Name>JSC-CheckMsisdn</Name>
                </Step>
                <Step>
                    <Name>JSC-ValidateMsisdn</Name>
                    <Condition>(du.config.isVerifyDuNumberFlag = "true")</Condition>
                </Step>
                <Step>
                    <Name>AM-RequiredRequestIdMissing</Name>
                    <Condition>(request.queryparam.request_id = null)</Condition>
                </Step>
                <Step>
                    <Name>AM-VerifyDuNumber-Payload</Name>
                </Step>
            </Request>
            <Response></Response>
            <Condition>(request.verb = "GET") and (proxy.pathsuffix JavaRegex "(/?)$") and( request.queryparam.action="verifyDuNumber")</Condition>
        </Flow>
        <Flow name="GetServiceStatus">
            <Request>
                <Step>
                    <Name>JSC-ValidateMsisdnandContractId</Name>
                    <Condition>(du.config.isGetServiceStatusFlag = "true")</Condition>
                </Step>
                <Step>
                    <Name>AM-GetServicesStatus-Payload</Name>
                </Step>
            </Request>
            <Response></Response>
            <Condition>(request.verb = "GET") and (proxy.pathsuffix JavaRegex "(/?)$")</Condition>
        </Flow>
        <Flow name="GetServiceParameters">
            <Request>
                <Step>
                    <Name>AM-RequiredProfileIdParamMissing</Name>
                    <Condition>(request.queryparam.profile_id = null)</Condition>
                </Step>
                <Step>
                    <Name>JSC-ValidateMsisdnandContractId</Name>
                    <Condition>(du.config.isGetServiceParametersFlag = "true")</Condition>
                </Step>
                <Step>
                    <Name>AM-GetServiceParameters-Payload</Name>
                </Step>
            </Request>
            <Response></Response>
            <Condition>(request.verb = "GET") and (proxy.pathsuffix MatchesPath "/{serviceCode}/parameters")</Condition>
        </Flow>
        <Flow name="ManageServices">
            <Request>
                #emptyBodyPayloadCheck#
                <Step>
                    <Name>JSC-ExtractManageServices-Payload</Name>
                </Step>
                #commonJsonToXmlPolicy#
                <Step>
                   <Name>AM-ManageService-Payload</Name>
                </Step>
            </Request>
            <Response></Response>
            <Condition>(request.verb = "PUT") and (proxy.pathsuffix JavaRegex "(/?)$")</Condition>
        </Flow>
        <Flow name="CancelScheduledRequest">
            <Request>
                <Step>
                    <Name>JSC-CheckMissingRequestIdCancelScheduledRequest</Name>
                </Step>
                <Step>
                    <Name>AM-CancelScheduledRequest-Payload</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(request.verb = "DELETE") and (proxy.pathsuffix JavaRegex "(/?)$")</Condition>
        </Flow>
        <Flow name="GetPrepaidSettings">
            <Description>Get Prepaid Settings</Description>
            <Request>
                <Step>
                    <Name>JSC-CheckMissingMsisdn</Name>
                </Step>
                <Step>
                    <Name>JSC-CheckAndValidateMsisdn</Name>
                    <Condition>(du.config.isGetPrepaidSettingsFlag = "true")</Condition>
                </Step>
                <Step>
                    <Name>JSC-BuildJsonPayloadGetPrepaidSettings</Name>
                </Step>
                #commonJsonToXmlPolicy#
                <Step>
                    <Name>AM-BuildSoapPayloadGetPrepaidSettings</Name>
                </Step>
            </Request>
            <Response/>
           <Condition>(proxy.pathsuffix MatchesPath "/prepaid/{msisdn}/parameters" and request.verb = "GET")</Condition>
        </Flow>
        <Flow name="ManagePrepaidTopUp">
            <Description>Manage Prepaid TopUp</Description>
            <Request>
                <Step>
                    <Name>JSC-CheckMissingMsisdn</Name>
                </Step>
                <Step>
                    <Name>JSC-CheckAndValidateMsisdn</Name>
                    <Condition>(du.config.isManagePrepaidTopUpFlag = "true")</Condition>
                </Step>
                #emptyBodyPayloadCheck#
                <Step>
                    <Name>JSC-BuildJsonPayloadManagePrepaidTopUp</Name>
                </Step>
                #commonJsonToXmlPolicy#
                <Step>
                    <Name>AM-BuildSoapPayloadManagePrepaidTopUp</Name>
                </Step>
            </Request>
            <Response/>
           <Condition>(proxy.pathsuffix MatchesPath "/prepaid/{msisdn}/topup" and request.verb = "PUT")</Condition>
        </Flow>
        <Flow name="ManagePostpaidDataBundles">
            <Description>Manage Postpaid Data Bundles</Description>
            <Request>
                 <Step>
                    <Name>JSC-CheckMissingMsisdn</Name>
                </Step>
                <Step>
                    <Name>JSC-CheckAndValidateMsisdn</Name>
                    <Condition>(du.config.isManagePostpaidDataBundlesFlag = "true")</Condition>
                </Step>
                #emptyBodyPayloadCheck#
                <Step>
                    <Name>JSC-BuildJsonPayloadManagePostpaidDataBundles</Name>
                </Step>
                #commonJsonToXmlPolicy#
                <Step>
                    <Name>AM-BuildSoapPayloadManagePostpaidDataBundles</Name>
                </Step>
            </Request>
            <Response/>
           <Condition>(proxy.pathsuffix MatchesPath "/postpaid/{msisdn}/databundles" and request.verb = "PUT")</Condition>
        </Flow>
        <Flow name="ManageMobilePostpaid">
            <Description>Manage Mobile Postpaid</Description>
            <Request>
                <Step>
                    <Name>JSC-CheckMissingMsisdn</Name>
                </Step>
                <Step>
                    <Name>JSC-CheckAndValidateMsisdn</Name>
                     <Condition>(du.config.isManageMobilePostpaidFlag = "true")</Condition>
                </Step>
                #emptyBodyPayloadCheck#
                <Step>
                    <Name>JSC-BuildJsonPayloadManageMobilePostpaid</Name>
                </Step>
                #commonJsonToXmlPolicy#
                <Step>
                    <Name>AM-BuildSoapPayloadManageMobilePostpaid</Name>
                </Step>
            </Request>
            <Response/>
           <Condition>(proxy.pathsuffix MatchesPath "/postpaid/{msisdn}" and request.verb = "PUT")</Condition>
        </Flow>
        <Flow name="ManagePrepaidLine">
            <Description>Manage Prepaid Line</Description>
            <Request>
                <Step>
                    <Name>JSC-CheckMissingMsisdn</Name>
                </Step>
                <Step>
                    <Name>JSC-CheckAndValidateMsisdn</Name>
                    <Condition>(du.config.isManagePrepaidLineFlag = "true")</Condition>
                </Step>
                #emptyBodyPayloadCheck#
                <Step>
                    <Name>JSC-BuildJsonPayloadManagePrepaidLine</Name>
                </Step>
                #commonJsonToXmlPolicy#
                <Step>
                    <Name>AM-BuildSoapPayloadManagePrepaidLine</Name>
                </Step>
            </Request>
            <Response/>
           <Condition>(proxy.pathsuffix MatchesPath "/prepaid/{msisdn}" and request.verb = "PUT")</Condition>
        </Flow>
        #unknownResourceFlowGeneric#
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response>
            #commonProxyPostflowResponse#
        </Response>
    </PostFlow>
    <HTTPProxyConnection>
        <BasePath>/v1/services</BasePath>
        <Properties/>
        <VirtualHost>default</VirtualHost>
        <!-- Comment/Remove the Virtual Host-secure while deploying API Proxy in Organization dudev -->
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    #pingResourceRouteRule#
    <RouteRule name="mock">
        <TargetEndpoint>mock</TargetEndpoint>
        <Condition>(du.config.request.mock = "true")</Condition>
    </RouteRule>
    <RouteRule name="mce">
        <TargetEndpoint>mce</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>